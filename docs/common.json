{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "KnowNOW",
    "description": "KnowNOW spec for Swagger",
    "termsOfService": "http://swagger.io/terms/"
  },
  "basePath": "/",
  "tags": [{
    "name": "Common",
    "description": "API for Common Settings"
  }],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "multipart/form-data"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/login": {
      "post": {
        "tags": [
          "Common"
        ],
        "description": "Patient Login API",
        "operationId": "for the URL",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "email",
            "in": "formData",
            "description": "E-mail address",
            "required": true,
            "type": "string",
            "default": "admin@gmail.com"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "Password",
            "required": true,
            "type": "string",
            "default": "123456"
          },
          {
            "name": "device_token",
            "in": "header",
            "description": "Device token",
            "required": false,
            "type": "string"
          },
          {
            "name": "device_type",
            "in": "header",
            "description": "Device type",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Login successfully",
            "schema": {
              "$ref": "#/definitions/login200"
            }
          },
          "401": {
            "description": "No such user found",
            "schema": {
              "$ref": "#/definitions/login401"
            }
          }
        }
      }
    },
    "/api/v1/logout": {
      "post": {
        "tags": [
          "Common"
        ],
        "description": "Logout user",
        "operationId": "Logout user",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "access_token",
          "in": "header",
          "description": "access token",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "Logged out successfully.",
            "schema": {
              "$ref": "#/definitions/logout200"
            }
          },
          "500": {
            "description": "Internal Server error- Cannot save user",
            "schema": {
              "$ref": "#/definitions/logout500"
            }
          }
        }
      }
    },
    "/api/v1/commonData": {
      "get": {
        "tags": [
          "Common"
        ],
        "description": "API for Common Settings",
        "operationId": "API for Common Settings",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Data found",
            "schema": {
              "$ref": "#/definitions/common200"
            }
          }
        }
      }
    },
    "/api/v1/getLocations": {
      "get": {
        "tags": [
          "Common"
        ],
        "description": "API for Common Settings",
        "operationId": "API for states and cities",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "type",
            "in": "query",
            "description": "type state or city",
            "required": false,
            "type": "string",
            "default": "state"
          },
          {
            "name": "countryId",
            "in": "query",
            "description": "id of country",
            "required": false,
            "type": "string",
            "default": "1"
          },
          {
            "name": "stateId",
            "in": "query",
            "description": "id of state",
            "required": false,
            "type": "string",
            "default": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "State/City found",
            "schema": {
              "$ref": "#/definitions/getLocations200"
            }
          }
        }
      }
    },
    "/api/v1/updateDeviceToken": {
      "put": {
        "tags": [
          "Common"
        ],
        "description": "Update device token",
        "operationId": "Update device token",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "access_token",
            "in": "header",
            "description": "Access token",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_token",
            "in": "header",
            "description": "device token to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "header",
            "description": "device ID to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "app_version",
            "in": "header",
            "description": "App version to be updated",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Device token updated",
            "schema": {
              "$ref": "#/definitions/updateDeviceToken200"
            }
          },
          "500": {
            "description": "Internal Server error",
            "schema": {
              "$ref": "#/definitions/updateDeviceToken500"
            }
          }
        }
      }
    },
    "/api/v1/getAppointmentsList": {
      "get": {
        "tags": [
          "Common"
        ],
        "description": "Get Appointment List",
        "operationId": "Get Appointment List",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "access_token",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Search term",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": true,
            "type": "number",
            "default": 1
          },
          {
            "name": "appointmentType",
            "in": "query",
            "description": "Appointment type \n example (upcoming/past)",
            "required": true,
            "type": "string",
            "default": "upcoming"
          }
        ],
        "responses": {
          "200": {
            "description": "Appointments fetched successfully",
            "schema": {
              "$ref": "#/definitions/getAppointmentsList200"
            }
          },
          "500": {
            "description": "Something went wrong",
            "schema": {
              "$ref": "#/definitions/getAppointmentsList500"
            }
          }
        }
      }
    },
    "/api/v1/notificationList": {
      "get": {
        "tags": [
          "Common"
        ],
        "description": "Get Notification List",
        "operationId": "Get Notification List",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "access_token",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": true,
            "type": "number",
            "default": 1
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "order by ascending or descending",
            "required": true,
            "type": "string",
            "default": "asc"
          }
        ],
        "responses": {
          "200": {
            "description": "Data found",
            "schema": {
              "$ref": "#/definitions/notificationList200"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/notificationList500"
            }
          }
        }
      }
    },
    "/api/v1/deleteNotification/{id}": {
      "delete": {
        "tags": [
          "Common"
        ],
        "description": "Delete Notification",
        "operationId": "Delete Notification",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "access_token",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "notification id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Notification successfully deleted",
            "schema": {
              "$ref": "#/definitions/deleteNotification200"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/deleteNotification500"
            }
          },
          "400": {
            "description": "Unable to delete notification",
            "schema": {
              "$ref": "#/definitions/deleteNotification400"
            }
          }
        }
      }
    },
    "/api/v1/reScheduleAppointment": {
      "post": {
        "tags": [
          "Common"
        ],
        "description": "Re-schedule Appointment",
        "operationId": "Re-schedule Appointment",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "access_token",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          },
          {
            "name": "appointmentId",
            "in": "formData",
            "description": "Appointment Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "timeSlotId",
            "in": "formData",
            "description": "Time slot id of provider",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Appointment re-scheduled successfully",
            "schema": {
              "$ref": "#/definitions/reScheduleAppointment200"
            }
          },
          "404": {
            "description": "Selected time slot is not available",
            "schema": {
              "$ref": "#/definitions/reScheduleAppointment404"
            }
          },
          "500": {
            "description": "Something went wrong",
            "schema": {
              "$ref": "#/definitions/reScheduleAppointment500"
            }
          }
        }
      }
    },
    "/api/v1/cancelAppointment": {
      "post": {
        "tags": [
          "Common"
        ],
        "description": "Cancel Appointment",
        "operationId": "Cancel Appointment",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "access_token",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          },
          {
            "name": "appointmentId",
            "in": "formData",
            "description": "Appointment Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Appointment re-scheduled successfully",
            "schema": {
              "$ref": "#/definitions/cancelAppointment200"
            }
          },
          "404": {
            "description": "Selected time slot is not available",
            "schema": {
              "$ref": "#/definitions/cancelAppointment404"
            }
          },
          "500": {
            "description": "Something went wrong",
            "schema": {
              "$ref": "#/definitions/cancelAppointment500"
            }
          }
        }
      }
    },
    "/api/v1/getPatientHealthRecord": {
      "get": {
        "tags": [
          "Common"
        ],
        "description": "Get Patient Health Record",
        "operationId": "Get Patient Health Record",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "access_token",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          },
          {
            "name": "appointmentId",
            "in": "query",
            "description": "Appointment Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Record Found",
            "schema": {
              "$ref": "#/definitions/getPatientHealthRecord200"
            }
          },
          "404": {
            "description": "Appointment not exists",
            "schema": {
              "$ref": "#/definitions/getPatientHealthRecord404"
            }
          },
          "500": {
            "description": "Something went wrong",
            "schema": {
              "$ref": "#/definitions/getPatientHealthRecord500"
            }
          }
        }
      }
    },
    "/api/v1/getPatientHistory": {
      "get": {
        "tags": [
          "Common"
        ],
        "description": "Get Patient History",
        "operationId": "Get Patient History",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "access_token",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          },
          {
            "name": "patientId",
            "in": "query",
            "description": "Patient Id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Patient History found",
            "schema": {
              "$ref": "#/definitions/getPatientHistory200"
            }
          },
          "404": {
            "description": "Patient not exist",
            "schema": {
              "$ref": "#/definitions/getPatientHistory404"
            }
          },
          "500": {
            "description": "Something went wrong",
            "schema": {
              "$ref": "#/definitions/getPatientHistory500"
            }
          }
        }
      }
    },
    "/api/v1/getInsuranceDetail/{id}": {
      "get": {
        "tags": [
          "Common"
        ],
        "description": "Get Insurance Detail",
        "operationId": "Get Insurance Detail",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "access_token",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Patient Id",
            "required": true,
            "type": "number"
          },
          {
            "name": "appointmentId",
            "in": "query",
            "description": "Appointment Id",
            "required": false,
            "type": "string"
          }          
        ],
        "responses": {
          "200": {
            "description": "Insurance detail found",
            "schema": {
              "$ref": "#/definitions/getInsuranceDetail200"
            }
          },
          "404": {
            "description": "No Data Found",
            "schema": {
              "$ref": "#/definitions/getInsuranceDetail404"
            }
          },
          "500": {
            "description": "Something went wrong",
            "schema": {
              "$ref": "#/definitions/getInsuranceDetail500"
            }
          }
        }
      }
    },
    "/api/v1/updateInsuranceStatus": {
      "put": {
        "tags": [
          "Common"
        ],
        "description": "Update Insurance Status",
        "operationId": "Update Insurance Status",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "access_token",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "formData",
            "description": "Patient Id",
            "required": true,
            "type": "number"
          },
          {
            "name": "insuranceStatus",
            "in": "formData",
            "description": "Insurance Status \n Eg. ( 0 => Unverified, 1 => Verified, 2 => Rejected )",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Insurance status updated successfully",
            "schema": {
              "$ref": "#/definitions/updateInsuranceStatus200"
            }
          },
          "404": {
            "description": "No Data Found",
            "schema": {
              "$ref": "#/definitions/updateInsuranceStatus404"
            }
          },
          "500": {
            "description": "Something went wrong",
            "schema": {
              "$ref": "#/definitions/updateInsuranceStatus500"
            }
          }
        }
      }
    },
    "/api/v1/getPrescription": {
      "get": {
        "tags": [
          "Common"
        ],
        "description": "Get Prescription",
        "operationId": "Get Prescription",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "access_token",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          },
          {
            "name": "appointmentId",
            "in": "query",
            "description": "Appointment Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Record Found",
            "schema": {
              "$ref": "#/definitions/getPrescription200"
            }
          },
          "404": {
            "description": "Appointment not exists",
            "schema": {
              "$ref": "#/definitions/getPrescription404"
            }
          },
          "500": {
            "description": "Something went wrong",
            "schema": {
              "$ref": "#/definitions/getPrescription500"
            }
          }
        }
      }
    },
    "/api/v1/getBillingDetails": {
      "get": {
        "tags": [
          "Common"
        ],
        "description": "Get Billing Details",
        "operationId": "Get Billing Details",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "access_token",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          },
          {
            "name": "appointmentId",
            "in": "query",
            "description": "Appointment Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Record Found",
            "schema": {
              "$ref": "#/definitions/getBillingDetails200"
            }
          },
          "404": {
            "description": "Appointment not exists",
            "schema": {
              "$ref": "#/definitions/getBillingDetails404"
            }
          },
          "500": {
            "description": "Something went wrong",
            "schema": {
              "$ref": "#/definitions/getBillingDetails500"
            }
          }
        }
      }
    },
    "/api/v1/calculateBilling": {
      "post": {
        "tags": [
          "Common"
        ],
        "description": "Calculate Billing",
        "operationId": "Calculate Billing",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "access_token",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          },
          {
            "name": "appointmentId",
            "in": "formData",
            "description": "Appointment Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "doctorFee",
            "in": "formData",
            "description": "Doctor Fee",
            "required": true,
            "type": "number"
          },
          {
            "name": "labFee",
            "in": "formData",
            "description": "Lab Fee",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Payment details",
            "schema": {
              "$ref": "#/definitions/calculateBilling200"
            }
          },
          "404": {
            "description": "Appointment not exists",
            "schema": {
              "$ref": "#/definitions/calculateBilling404"
            }
          },
          "500": {
            "description": "Something went wrong",
            "schema": {
              "$ref": "#/definitions/calculateBilling500"
            }
          }
        }
      }
    },
    "/api/v1/confirmPayment": {
      "post": {
        "tags": [
          "Common"
        ],
        "description": "Confirm Payment",
        "operationId": "Confirm Payment",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "access_token",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          },
          {
            "name": "appointmentId",
            "in": "formData",
            "description": "Appointment Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Payment done",
            "schema": {
              "$ref": "#/definitions/confirmPayment200"
            }
          },
          "400": {
            "description": "Payment failed",
            "schema": {
              "$ref": "#/definitions/confirmPayment400"
            }
          },          
          "404": {
            "description": "Appointment not exists",
            "schema": {
              "$ref": "#/definitions/confirmPayment404"
            }
          },
          "500": {
            "description": "Something went wrong",
            "schema": {
              "$ref": "#/definitions/confirmPayment500"
            }
          }
        }
      }
    },    
    "/api/v1/settings": {
      "put": {
        "tags": [
          "Common"
        ],
        "description": "Settings",
        "operationId": "Settings",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "access_token",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          },
          {
            "name": "enableEmail",
            "in": "formData",
            "description": "enable email or not(0 or 1)",
            "required": true,
            "type": "integer"
          },
          {
            "name": "enableSMS",
            "in": "formData",
            "description": "enable sms or not",
            "required": true,
            "type": "integer"
          },
          {
            "name": "language",
            "in": "formData",
            "description": "enable sms or not",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Settings successfully updated",
            "schema": {
              "$ref": "#/definitions/settings200"
            }
          },
          "400": {
            "description": "Settings cannot be updated",
            "schema": {
              "$ref": "#/definitions/settings400"
            }
          },
          "500": {
            "description": "Something went wrong",
            "schema": {
              "$ref": "#/definitions/settings500"
            }
          }
        }
      }
    },
    "/api/v1/changePassword": {
      "post": {
        "tags": [
          "Common"
        ],
        "description": "Change Password",
        "operationId": "Change Password",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "access_token",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string",
            "default": ""
          }, {
            "name": "oldPassword",
            "in": "formData",
            "description": "Old Password",
            "required": true,
            "type": "string",
            "default": "123456"
          },
          {
            "name": "newPassword",
            "in": "formData",
            "description": "New Password",
            "required": true,
            "type": "string",
            "default": "123456"
          },
          {
            "name": "confirmPassword",
            "in": "formData",
            "description": "Confirm Password",
            "required": true,
            "type": "string",
            "default": "123456"
          },
          {
            "name": "userId",
            "in": "formData",
            "description": "user id",
            "required": false,
            "type": "integer",
            "default": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Verification link sent to email",
            "schema": {
              "$ref": "#/definitions/changePassword200"
            }
          },
          "403": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/changePassword403"
            }
          },
          "409": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/changePassword409"
            }
          },
          "500": {
            "description": "Internal Server error- Cannot save user",
            "schema": {
              "$ref": "#/definitions/changePassword500"
            }
          }
        }
      }
    },
    "/api/v1/getSettings": {
      "get": {
        "tags": [
          "Common"
        ],
        "description": "Get Settings",
        "operationId": "Get Settings",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "access_token",
          "in": "header",
          "description": "access token",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "Data successfully fetched",
            "schema": {
              "$ref": "#/definitions/getSettings200"
            }
          },
          "400": {
            "description": "No data found",
            "schema": {
              "$ref": "#/definitions/getSettings400"
            }
          },
          "500": {
            "description": "Something went wrong",
            "schema": {
              "$ref": "#/definitions/getSettings500"
            }
          }
        }
      }
    },
    "/api/v1/rateExperience": {
      "post": {
        "tags": [
          "Common"
        ],
        "description": "Rate experience",
        "operationId": "Rate experience",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "access_token",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          },
          {
            "name": "rating",
            "in": "formData",
            "description": "rating (from 0 to 5)",
            "required": false,
            "type": "integer"
          },
          {
            "name": "comments",
            "in": "formData",
            "description": "comments",
            "required": false,
            "type": "string"
          },
          {
            "name": "appointmentId",
            "in": "formData",
            "description": "appointmentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Data successfully added",
            "schema": {
              "$ref": "#/definitions/rateExperience200"
            }
          },
          "400": {
            "description": "Data cannot be added",
            "schema": {
              "$ref": "#/definitions/rateExperience400"
            }
          },
          "401": {
            "description": "No such appointment found",
            "schema": {
              "$ref": "#/definitions/rateExperience400"
            }
          },
          "500": {
            "description": "Something went wrong",
            "schema": {
              "$ref": "#/definitions/settings500"
            }
          }
        }
      }
    },
    "/api/v1/updateQuickbloxId": {
      "put": {
        "tags": [
          "Common"
        ],
        "description": "Update Quickbox Id",
        "operationId": "Update Quickbox Id",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "access_token",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          },
          {
            "name": "quickBloxId",
            "in": "formData",
            "description": "Quickblox Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Information updated",
            "schema": {
              "$ref": "#/definitions/updateQuickbloxId200"
            }
          },
          "500": {
            "description": "Something went wrong",
            "schema": {
              "$ref": "#/definitions/updateQuickbloxId500"
            }
          }
        }
      }
    },
    "/api/v1/saveQuickbloxChat": {
      "post": {
        "tags": [
          "Common"
        ],
        "description": "Save Quickbox Chat",
        "operationId": "Save Quickbox Chat",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "access_token",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          },
          {
            "name": "dialogueId",
            "in": "formData",
            "description": "Dialogue Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "lastMessage",
            "in": "formData",
            "description": "Last Message",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Chat save successfully",
            "schema": {
              "$ref": "#/definitions/saveQuickbloxChat200"
            }
          },
          "400": {
            "description": "Unable to save chat",
            "schema": {
              "$ref": "#/definitions/saveQuickbloxChat400"
            }
          },
          "500": {
            "description": "Something went wrong",
            "schema": {
              "$ref": "#/definitions/saveQuickbloxChat500"
            }
          }
        }
      }
    },
    "/api/v1/getInfoPage/{id}": {
      "get": {
        "tags": [
          "Common"
        ],
        "description": "getInfoPageById",
        "operationId": "getInfoPageById",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "Index of infopages, get in common data",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "Infopages updated successfully",
            "schema": {
              "$ref": "#/definitions/InfopagesById200"
            }
          },
          "500": {
            "description": "Something went wrong",
            "schema": {
              "$ref": "#/definitions/InfopagesById500"
            }
          }
        }
      }
    },
    "/api/v1/updateCallStatus/{appointmentId}": {
      "put": {
        "tags": [
          "Common"
        ],
        "description": "Update call status",
        "operationId": "Update call status",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "access_token",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          },
          {
            "name": "appointmentId",
            "in": "path",
            "description": "Appointment Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Call status saved Successfully",
            "schema": {
              "$ref": "#/definitions/updateCallStatus200"
            }
          },
          "404": {
            "description": "Appointment not found",
            "schema": {
              "$ref": "#/definitions/updateCallStatus404"
            }
          },
          "500": {
            "description": "Something went wrong",
            "schema": {
              "$ref": "#/definitions/updateCallStatus500"
            }
          }
        }
      }
    },
    "/api/v1/getMessages": {
      "get": {
        "tags": [
          "Common"
        ],
        "description": "Get Messages List",
        "operationId": "Get Messages List",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "access_token",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Search term",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": true,
            "type": "number",
            "default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Messages fetched successfully",
            "schema": {
              "$ref": "#/definitions/getMessages200"
            }
          },
          "500": {
            "description": "Something went wrong",
            "schema": {
              "$ref": "#/definitions/getMessages500"
            }
          }
        }
      }
    },
    "/api/v1/getProfileInfo": {
      "get": {
        "tags": [
          "Common"
        ],
        "description": "getProfileInfo",
        "operationId": "getProfileInfo",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "access_token",
          "in": "header",
          "description": "Access token",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "Get Profile Fetched Successfully",
            "schema": {
              "$ref": "#/definitions/getProfileInfo200"
            }
          },
          "500": {
            "description": "Something went wrong",
            "schema": {
              "$ref": "#/definitions/getProfileInfo500"
            }
          }
        }
      }
    },
    "/api/v1/checkVideoStatus": {
      "get": {
        "tags": [
          "Common"
        ],
        "description": "checkVideoEnabled",
        "operationId": "checkVideoEnabled",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "access_token",
            "in": "header",
            "description": "Access token",
            "required": true,
            "type": "string"
          },
          {
            "name": "appointmentId",
            "in": "query",
            "description": "Appointment Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Video Is Enabled",
            "schema": {
              "$ref": "#/definitions/checkVideoStatus200"
            }
          },
          "500": {
            "description": "Something went wrong",
            "schema": {
              "$ref": "#/definitions/checkVideoStatus500"
            }
          }
        }
      }
    },
    "/api/v1/uploadChatImage": {
      "post": {
        "tags": [
          "Common"
        ],
        "description": "Update Chat Image",
        "operationId": "Update Chat Image",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "image",
            "in": "formData",
            "description": "Upload file",
            "required": true,
            "type": "file"
          },
          {
            "name": "access_token",
            "in": "header",
            "description": "access_token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Uploaded",
            "schema": {
              "$ref": "#/definitions/uploadChatImage200"
            }
          },
          "400": {
            "description": "Please upload only these types/Please upload an image",
            "schema": {
              "$ref": "#/definitions/uploadChatImage400"
            }
          },
          "500": {
            "description": "Cannot Upload File To Server error -- ",
            "schema": {
              "$ref": "#/definitions/uploadChatImage500"
            }
          }
        }
      }
    },
    "/api/v1/getAppointmentDocuments": {
      "get": {
        "tags": [
          "Common"
        ],
        "description": "Get Appointment Documents on Email",
        "operationId": "Get Appointment Documents on Email",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "access_token",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          },
          {
            "name": "appointmentId",
            "in": "query",
            "description": "Appointment Id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Appointment info sent to your email",
            "schema": {
              "$ref": "#/definitions/getAppointmentDocuments200"
            }
          },
          "404": {
            "description": "Appointment not found",
            "schema": {
              "$ref": "#/definitions/getAppointmentDocuments404"
            }
          },          
          "500": {
            "description": "Something went wrong",
            "schema": {
              "$ref": "#/definitions/getAppointmentDocuments500"
            }
          }
        }
      }
    }    
  },
  "definitions": {
    "login200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Login successfully"
        },
        "data": {
          "type": "object",
          "example": {
            "profile": {
              "email": "utkarsh@mobikasa.com",
              "role": 3,
              "createdTimeSpan": "1565783734784",
              "braintreeCustomerId": null,
              "countryCode": "+1",
              "telephone": "1212111111",
              "firstName": "Utkarsh",
              "lastName": "Singh",
              "dateOfBirth": null,
              "gender": null,
              "clinicCode": null,
              "city": 0,
              "state": 0,
              "zipCode": "",
              "address": "",
              "country": 0,
              "profileImage": "http://localhost/public/common/patient.png",
              "profileThumbImage": "http://localhost/public/common/thumb_patient.png"
            },
            "insurance_data": {
              "insurance_images": []
            },
            "pharmacy": {
              "pharmacy_name": null,
              "pharmacy_address": null,
              "pharmacy_phone": null
            },
            "labs": {
              "lab_name": null,
              "lab_address": null,
              "lab_phone": null
            },
            "allergiesMedication": {
              "medicalCondition": "",
              "allergies": {
                "medicationAllergies": "",
                "otherAllergies": ""
              },
              "medications": ""
            }
          }
        }
      }
    },
    "login401": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "401"
        },
        "message": {
          "type": "string",
          "example": "No such user found"
        }
      }
    },
    "common200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Data found"
        },
        "data": {
          "type": "object",
          "example": {
            "gender": [{
                "id": 1,
                "name": "Male"
              },
              {
                "id": 2,
                "name": "Female"
              },
              {
                "id": 3,
                "name": "Other"
              },
              {
                "id": 4,
                "name": "Not Specified"
              }
            ],
            "status": [{
                "id": 0,
                "name": "pending"
              },
              {
                "id": 1,
                "name": "active"
              },
              {
                "id": 2,
                "name": "blocked"
              },
              {
                "id": 3,
                "name": "deactive"
              }
            ],
            "role": [{
                "id": 1,
                "name": "superadmin"
              },
              {
                "id": 2,
                "name": "admin"
              },
              {
                "id": 3,
                "name": "patient"
              },
              {
                "id": 4,
                "name": "provider"
              }
            ],
            "privacy_policy_link": "https://knownowapp.mobikasa.net/api/v1/docs",
            "terms_and_conditions_link": "https://knownowapp.mobikasa.net/api/v1/docs",
            "countries": [{
              "id": 1,
              "name": "United States"
            }]
          }
        }
      }
    },
    "getLocations200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Stste/City found"
        },
        "data": {
          "type": "object",
          "example": {
            "id": 1,
            "name": "New York"
          }
        }
      }
    },
    "updateDeviceToken200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Device Token updated successfully"
        }
      }
    },
    "updateDeviceToken500": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "500"
        },
        "message": {
          "type": "string",
          "example": "Internal Server Error"
        }
      }
    },
    "getAppointmentsList200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Appointments fetched successfully"
        },
        "data": {
          "type": "object",
          "example": {
            "totalRecords": 2,
            "recordPerPage": 10,
            "currentPage": 1,
            "providersCurrentlyAvailable": 0,
            "result": [{
              "appointmentId": "5cc2ade6-050d-4799-a293-ddb68a54c057",
              "isVideoEnabled": 1,
              "id": 4,
              "timeStamp": 1569850624000,
              "firstName": "Dr Hawkin",
              "lastName": "Garland",
              "gender": 1,
              "dateOfBirth": "1997-09-06",
              "countryCode": "+43",
              "telephone": "1245444454",
              "email": "hg@yopmail.com",
              "isChatEnabled": 0,
              "profileImage": "https://knownow-assets.s3.us-west-2.amazonaws.com/1568386205573/1568759114738.jpg",
              "profileThumbImage": "https://knownow-assets.s3.us-west-2.amazonaws.com/1568386205573/thumb_1568759114738.jpg",
              "appointmentStatus": "Cancelled",
              "quickBloxId": "97643351",
              "status": 0,
              "specilization": "Kidne",
              "languageSpeaks": "English, German, French"
            }]
          }
        }
      }
    },
    "getAppointmentsList500": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "500"
        },
        "message": {
          "type": "string",
          "example": "Something went wrong"
        }
      }
    },
    "reScheduleAppointment200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Appointment re-scheduled successfully"
        }
      }
    },
    "reScheduleAppointment404": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "404"
        },
        "message": {
          "type": "string",
          "example": "Selected time slot is not available"
        }
      }
    },
    "reScheduleAppointment500": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "500"
        },
        "message": {
          "type": "string",
          "example": "Something went wrong"
        }
      }
    },
    "cancelAppointment200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Appointment cancelled successfully"
        }
      }
    },
    "cancelAppointment404": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "404"
        },
        "message": {
          "type": "string",
          "example": "Appointment not found"
        }
      }
    },
    "cancelAppointment500": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "500"
        },
        "message": {
          "type": "string",
          "example": "Something went wrong"
        }
      }
    },
    "getPatientHealthRecord200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Record found"
        },
        "data": {
          "type": "object",
          "example": {
            "id": "45",
            "allergiesMedication": {
              "medicalCondition": [
                "Test",
                "Test2",
                "Test3"
              ],
              "allergies": {
                "medicationAllergies": [],
                "otherAllergies": []
              },
              "medications": [
                "Test",
                "Test2",
                "Test3"
              ]
            },
            "medicalQuestionnaires": [{
                "question": "asdf",
                "answer": "1235"
              },
              {
                "question": "asf",
                "answer": "12356"
              }
            ],
            "uploadedDocuments": [{
                "imageUrl": "http://localhost/assets/uploads/1565083283415/1567088734312.jpg",
                "thumbUrl": "http://localhost/assets/uploads/1565083283415/thumb_1567088734312.jpg"
              },
              {
                "imageUrl": "http://localhost/assets/uploads/1565083283415/1567089074295.jpg",
                "thumbUrl": "http://localhost/assets/uploads/1565083283415/thumb_1567089074295.jpg"
              }
            ]
          }
        }
      }
    },
    "getPatientHealthRecord404": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "404"
        },
        "message": {
          "type": "string",
          "example": "Appointment not exists"
        }
      }
    },
    "getPatientHealthRecord500": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "500"
        },
        "message": {
          "type": "string",
          "example": "Something went wrong"
        }
      }
    },
    "getPatientHistory200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Patient History found"
        },
        "data": {
          "type": "object",
          "example": {
            "totalRecords": 1,
            "recordPerPage": 10,
            "currentPage": "1",
            "result": [{
              "appointmentId": "f44bce21-0990-47db-a45c-c736c5d33c47",
              "answer": "Stomach Ache",
              "appointmentDate": "2019-09-04"
            }]
          }
        }
      }
    },
    "getPatientHistory404": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "404"
        },
        "message": {
          "type": "string",
          "example": "Patient not exist"
        }
      }
    },
    "getPatientHistory500": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "500"
        },
        "message": {
          "type": "string",
          "example": "Something went wrong"
        }
      }
    },
    "getInsuranceDetail200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Insurance detail found"
        },
        "data": {
          "type": "object",
          "example": {
            "isInsuranceVerified": 0,
            "policyHolderName": "Richard George",
            "groupId": "RE285 2585",
            "memberId": "RE285 2585",
            "insurance_images": [
              "http://localhost//public/localhost/patients/1565083283415/1567088734312.jpg",
              "http://localhost//public/localhost/patients/1565083283415/1567088734314.jpg"
            ]
          }
        }
      }
    },
    "getInsuranceDetail404": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "404"
        },
        "message": {
          "type": "string",
          "example": "No Data Found"
        }
      }
    },
    "getInsuranceDetail500": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "500"
        },
        "message": {
          "type": "string",
          "example": "Something went wrong"
        }
      }
    },
    "updateInsuranceStatus200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Insurance status updated successfully"
        }
      }
    },
    "updateInsuranceStatus404": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "404"
        },
        "message": {
          "type": "string",
          "example": "No Data Found"
        }
      }
    },
    "updateInsuranceStatus500": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "500"
        },
        "message": {
          "type": "string",
          "example": "Something went wrong"
        }
      }
    },
    "getPrescription200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Record found"
        },
        "data": {
          "type": "object",
          "example": {
            "prescription": "",
            "pharmacy": "",
            "labOrdered": ""
          }
        }
      }
    },
    "changePassword200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Password successfully changed"
        }
      }
    },
    "changePassword400": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "400"
        },
        "message": {
          "type": "string",
          "example": "Old password does not match/Please enter a new password. This password already exists."
        }
      }
    },
    "changePassword409": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "401"
        },
        "message": {
          "type": "string",
          "example": "User does not exists"
        }
      }
    },
    "getPrescription404": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "404"
        },
        "message": {
          "type": "string",
          "example": "Appointment not exists"
        }
      }
    },
    "getPrescription500": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "500"
        },
        "message": {
          "type": "string",
          "example": "Something went wrong"
        }
      }
    },
    "getBillingDetails200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Record found"
        },
        "data": {
          "type": "object",
          "example": {
            "payWith": "************1111",
            "promoCode": "ADD20",
            "doctorFee": "$5000.00",
            "labFee": "Not Included",
            "insurance": "Not Covered",
            "discount": "-$1000.00",
            "total": "$4000",
            "amountAlreadyCharged": "$8000",
            "adjustedAmount": "-$4000",
            "isCompleted": 0
          }
        }
      }
    },
    "getBillingDetails404": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "404"
        },
        "message": {
          "type": "string",
          "example": "Appointment not exists"
        }
      }
    },
    "getBillingDetails500": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "500"
        },
        "message": {
          "type": "string",
          "example": "Something went wrong"
        }
      }
    },
    "calculateBilling200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Payment details"
        },
        "data": {
          "type": "object",
          "example": {
            "payWith": "************1111",
            "promoCode": "ADD20",
            "doctorFee": "$5000.00",
            "labFee": "Not Included",
            "insurance": "Not Covered",
            "discount": "-$1000.00",
            "total": "$4000.00",
            "amountAlreadyCharged": "$8000.00",
            "adjustedAmount": "-$4000"
          }
        }
      }
    },
    "calculateBilling404": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "404"
        },
        "message": {
          "type": "string",
          "example": "Appointment not exists"
        }
      }
    },
    "calculateBilling500": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "500"
        },
        "message": {
          "type": "string",
          "example": "Something went wrong"
        }
      }
    },
    "settings200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Settings successfully updated"
        }
      }
    },
    "settings400": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "400"
        },
        "message": {
          "type": "string",
          "example": "Settings cannot be updated"
        }
      }
    },
    "settings500": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "500"
        },
        "message": {
          "type": "string",
          "example": "Internal Server Error"
        }
      }
    },
    "getSettings200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Data successfully fetched"
        },
        "data": {
          "type": "object",
          "example": {
            "language": "en",
            "enableEmail": false,
            "enableSMS": false
          }
        }
      }
    },
    "getSettings400": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "400"
        },
        "message": {
          "type": "string",
          "example": "No data found"
        }
      }
    },
    "getSettings500": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "500"
        },
        "message": {
          "type": "string",
          "example": "Internal Server Error"
        }
      }
    },
    "rateExperience200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Data successfully added"
        }
      }
    },
    "rateExperience400": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "400"
        },
        "message": {
          "type": "string",
          "example": "Data cannot be added"
        }
      }
    },
    "rateExperience401": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "401"
        },
        "message": {
          "type": "string",
          "example": "No such appointment found"
        }
      }
    },
    "rateExperience500": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "500"
        },
        "message": {
          "type": "string",
          "example": "Internal Server Error"
        }
      }
    },
    "notificationList200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true/false"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Data found"
        },
        "data": {
          "type": "object",
          "example": {
            "totalRecords": 15,
            "recordPerPage": 10,
            "currentPage": 1,
            "results": [{
                "message": "testing",
                "title": "title",
                "id": 4,
                "profileImage": "http://localhost/assets/uploads/1564576911646/1567002732310.jpeg",
                "profileThumbImage": "http://localhost/assets/uploads/thumb_1564576911646/1567002732310.jpeg"
              },
              {
                "message": "testing",
                "title": "title",
                "id": 5,
                "profileImage": "http://localhost/assets/uploads/1564576911646/1567002732310.jpeg",
                "profileThumbImage": "http://localhost/assets/uploads/thumb_1564576911646/1567002732310.jpeg"
              },
              {
                "message": "testing",
                "title": "title",
                "id": 6,
                "profileImage": "http://localhost/assets/uploads/1564576911646/1567002732310.jpeg",
                "profileThumbImage": "http://localhost/assets/uploads/thumb_1564576911646/1567002732310.jpeg"
              },
              {
                "message": "testing",
                "title": "title",
                "id": 7,
                "profileImage": "http://localhost/assets/uploads/1564576911646/1567002732310.jpeg",
                "profileThumbImage": "http://localhost/assets/uploads/thumb_1564576911646/1567002732310.jpeg"
              },
              {
                "message": "testing",
                "title": "title",
                "id": 8,
                "profileImage": "http://localhost/public/common/provider.png",
                "profileThumbImage": "http://localhost/public/common/provider.png"
              },
              {
                "message": "testing",
                "title": "title",
                "id": 9,
                "profileImage": "http://localhost/public/common/provider.png",
                "profileThumbImage": "http://localhost/public/common/provider.png"
              },
              {
                "message": "testing",
                "title": "title",
                "id": 10,
                "profileImage": "http://localhost/public/common/provider.png",
                "profileThumbImage": "http://localhost/public/common/provider.png"
              },
              {
                "message": "testing",
                "title": "title",
                "id": 11,
                "profileImage": "http://localhost/public/common/provider.png",
                "profileThumbImage": "http://localhost/public/common/provider.png"
              },
              {
                "message": "testing",
                "title": "title",
                "id": 12,
                "profileImage": "http://localhost/public/common/provider.png",
                "profileThumbImage": "http://localhost/public/common/provider.png"
              },
              {
                "message": "testing",
                "title": "title",
                "id": 13,
                "profileImage": "http://localhost/public/common/provider.png",
                "profileThumbImage": "http://localhost/public/common/provider.png"
              }
            ]
          }
        }
      }
    },
    "notificationList500": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "500"
        },
        "message": {
          "type": "string",
          "example": "Internal Server Error"
        }
      }
    },
    "deleteNotification200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Notification successfully deleted"
        }
      }
    },
    "deleteNotification400": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "400"
        },
        "message": {
          "type": "string",
          "example": "Unable to delete notification"
        }
      }
    },
    "deleteNotification500": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "500"
        },
        "message": {
          "type": "string",
          "example": "Internal Server Error"
        }
      }
    },
    "updateQuickbloxId200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Information updated"
        }
      }
    },
    "updateQuickbloxId500": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "500"
        },
        "message": {
          "type": "string",
          "example": "Internal Server Error"
        }
      }
    },
    "saveQuickbloxChat200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Chat save successfully"
        }
      }
    },
    "saveQuickbloxChat400": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "400"
        },
        "message": {
          "type": "string",
          "example": "Unable to save chat"
        }
      }
    },
    "saveQuickbloxChat500": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "500"
        },
        "message": {
          "type": "string",
          "example": "Internal Server Error"
        }
      }
    },
    "InfopagesById200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Infopages saved successfully"
        },
        "data": {
          "type": "object",
          "example": {
            "infoPage": {
              "id": 1,
              "title": "terms",
              "content": "test",
              "createdAt": "2019-09-17T12:03:46.000Z",
              "updatedAt": "2019-09-23T05:06:23.000Z"
            }
          }
        }

      }
    },
    "InfopagesById500": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "500"
        },
        "message": {
          "type": "string",
          "example": "Internal Server Error"
        }
      }
    },
    "updateCallStatus200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Call status saved Successfully"
        }
      }
    },
    "updateCallStatus404": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "404"
        },
        "message": {
          "type": "string",
          "example": "Appointment not found"
        }
      }
    },
    "updateCallStatus500": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "500"
        },
        "message": {
          "type": "string",
          "example": "Something went wrong"
        }
      }
    },
    "getMessages200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Messages fetched successfully"
        },
        "data": {
          "type": "object",
          "example": {
            "totalRecords": 1,
            "recordPerPage": 20,
            "currentPage": 1,
            "result": [{
              "appointmentId": null,
              "dialogueId": "5d8b93d6a28f9a46b047d583",
              "lastMessage": null,
              "updatedAt": "2019-09-25T16:20:38.000Z",
              "id": 14,
              "firstName": "Dr Mark",
              "lastName": "Douglas",
              "gender": 1,
              "dateOfBirth": "1981-07-01",
              "countryCode": "+1",
              "telephone": "8882730419",
              "email": "provider1@mobikasa.com",
              "isChatEnabled": 0,
              "profileImage": "undefined1568450119055/1568631045980.png",
              "profileThumbImage": "undefinedthumb_1568450119055/1568631045980.png",
              "specilization": "Orthopedics",
              "languageSpeaks": "English"
            }]
          }
        }
      }
    },
    "getMessages500": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "500"
        },
        "message": {
          "type": "string",
          "example": "Something went wrong"
        }
      }
    },
    "getProfileInfo200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Get Profile Info Fetched"
        }
      }
    },
    "getProfileInfo500": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "500"
        },
        "message": {
          "type": "string",
          "example": "Internal Server Error"
        }
      }
    },
    "checkVideoStatus200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "true"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Video Info Fetched"
        },
        "data": {
          "type": "object",
          "example": {
            "isEnabled": 0
          }
        }
      }
    },
    "checkVideoStatus500": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "500"
        },
        "message": {
          "type": "string",
          "example": "Internal Server Error"
        }
      }
    },
    "uploadChatImage200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "data": {
          "type": "string",
          "example": "1515151515.png"
        },
        "message": {
          "type": "string",
          "example": "Successfully Uploaded"
        }
      }
    },
    "uploadChatImage400": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "400"
        },
        "message": {
          "type": "string",
          "example": "Please upload an image/Please upload only these types"
        }
      }
    },
    "uploadChatImage500": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "500"
        },
        "message": {
          "type": "string",
          "example": "Cannot Upload File To Server error"
        }
      }
    },
    "getAppointmentDocuments200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Appointment info sent to your email"
        }
      }
    },
    "getAppointmentDocuments404": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "404"
        },
        "message": {
          "type": "string",
          "example": "Appointment not found"
        }
      }
    },
    "getAppointmentDocuments500": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "500"
        },
        "message": {
          "type": "string",
          "example": "Something went wrong"
        }
      }
    },
    "confirmPayment200": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "200"
        },
        "message": {
          "type": "string",
          "example": "Payment done"
        }
      }
    },
    "confirmPayment400": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "400"
        },
        "message": {
          "type": "string",
          "example": "Payment failed"
        }
      }
    },
    "confirmPayment404": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "404"
        },
        "message": {
          "type": "string",
          "example": "Appointment not exists"
        }
      }
    },
    "confirmPayment500": {
      "properties": {
        "status": {
          "type": "boolean",
          "example": "false"
        },
        "code": {
          "type": "integer",
          "example": "500"
        },
        "message": {
          "type": "string",
          "example": "Something went wrong"
        }
      }
    }    
  }
}